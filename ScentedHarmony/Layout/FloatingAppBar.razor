@using Microsoft.VisualBasic
@using ScentedHarmony.Services
@inherits ComponentBase

@inject NavigationManager NM
@inject IShoppingCartState SCS

<MudAppBar Fixed="true" Style="background-color: var(--scented-harmony-appbar-background) !important;">
    <div class="floating-logo mud-toolbar-gutters mud-elevation-4">
        <img src="ScentedHarmony-LogoMain.png" alt="ScentedHarmony-Logo"/>
    </div>
    <div class="floating-logo-w"></div>
    <MudButton Variant="Variant.Text"
               Class="@GetButtonClass(["Home", string.Empty])"
               Style="color: var(--scented-harmony-appbar-button-color) !important;"
               @onclick="@(() => NavigateTo("/"))">
        <MudText>O nás</MudText>
    </MudButton>
    <MudButton Variant="Variant.Text"
               Class="@GetButtonClass("Eshop")"
               Style="color: var(--scented-harmony-appbar-button-color) !important;"
               @onclick="@(() => NavigateTo("/Eshop"))">
        <MudText>E-shop</MudText>
    </MudButton>
    <MudSpacer/>
    <MudBadge Content="@SCS.ShoppingChartProductsCount" Overlap="true" Class="mx-6 my-4">
        <MudIconButton OnClick="@(() => NavigateTo("/ShoppingCart"))" Size="Size.Small" Icon="@Icons.Material.Filled.ShoppingCart" Style="color: var(--scented-harmony-appbar-button-color) !important;" />
    </MudBadge>
</MudAppBar>

<style>
    .floating-logo-w {
        min-width: 200px;
    }
    .floating-logo {
        position: absolute;
        background-color: var(--scented-harmony-appbar-background) !important;
        top: 0;
        left: 50px;
        transition: max-height 0.3s ease;
    }
    .btn-active {
        border-bottom: 2px solid;
        border-radius: 0 !important;
    }
</style>

@code {
    private const string NavLinkDefaultClass = "";

    private string _activePage = string.Empty;

    private string GetActivePage() => NM.Uri.Replace(NM.BaseUri, string.Empty)
        .TrimStart('/')
        .Split('/')
        .FirstOrDefault() ?? string.Empty;

    private string GetButtonClass(string page) => GetButtonClass([page]);
    
    private string GetButtonClass(string[] pages) =>
        NavLinkDefaultClass + (
            pages.Any(p => p.Equals(_activePage, StringComparison.OrdinalIgnoreCase))
                ? " btn-active"
                : ""
        );

    protected override void OnInitialized()
    {
        _activePage = GetActivePage();
        SCS.OnShoppingCartUpdated += RefreshShoppingCartBadge;
        NM.LocationChanged += HandleLocationChanged;
    }
    
    private void HandleLocationChanged(object? _, LocationChangedEventArgs __)
    {
        _activePage = GetActivePage();
        StateHasChanged();
    }
    
    private void NavigateTo(string page)
    {
        NM.NavigateTo(page);
    }

    private void RefreshShoppingCartBadge()
    {
        StateHasChanged();
    }
}